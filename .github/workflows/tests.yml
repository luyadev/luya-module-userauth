name: Tests

on: [push, pull_request]

env:
  DEFAULT_COMPOSER_FLAGS: "--prefer-dist --no-interaction"
  CC_TEST_REPORTER_ID: 7cda7a62560470b5f80e125a5be65308bcb01fece04bfb6b304ba2075363f6ba
jobs:

 ## PHPSTAN
  phpstan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install PHP
        uses: shivammathur/setup-php@2.21.0
        with:
          php-version: '8.0'
          extensions: mbstring, intl
          coverage: none
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          update: true

      - name: Install dependencies
        run: composer install --prefer-dist --no-interaction --no-progress --optimize-autoloader

      - name: PHPStan tests
        run: composer phpstan

  # PHPCSFIXER
  php-cs-fixer:
    runs-on: ubuntu-latest
    steps:
        - name: Checkout
          uses: actions/checkout@v3

        - name: Install
          run: composer install

        - name: Run php-cs-fixer
          run: composer phpcsfixer

  ## phpunit
  phpunit:
    name: PHP ${{ matrix.php }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        php: ['8.0', '8.1', '8.2', '8.3']

    steps:
      ## checkout the repoistory 
      - name: Checkout Repo
        uses: actions/checkout@v2

      ## Install php
      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: curl, dom, imagick, intl, mbstring, mcrypt, memcached, mysql, pdo, pdo_mysql, pdo_pgsql, pdo_sqlite, pgsql, sqlite
          ini-values: date.timezone='UTC'
          coverage: xdebug

      ## install composer
      - name: Install dependencies
        run: composer install $DEFAULT_COMPOSER_FLAGS

      ## run unit tests
      - name: PHP Unit tests for PHP 
        run: vendor/bin/phpunit --verbose --configuration actions.phpunit.xml
        if: matrix.php == '8.0' || matrix.php == '8.1' || matrix.php == '8.2' || matrix.php == '8.3'

      ## unit test with coverage
      - name: PHP Unit tests for PHP 8.0
        run: vendor/bin/phpunit --verbose --coverage-clover=clover.xml --configuration actions.phpunit.xml
        if: matrix.php == '8.0'

      ## coverage
      - name: Code coverage
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter
          ./cc-test-reporter after-build -t clover
        if: matrix.php == '8.0'
        continue-on-error: true # if is fork
